{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ecs-adf-001"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureBlobStorage_VBFA_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage_VBFA'"
		},
		"AzureDataLake_Gen2001_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLake_Gen2001'"
		},
		"AzurePostgreSql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql1'"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics1'"
		},
		"AzureSynapseAnalytics2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics2'"
		},
		"AzureTableStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureTableStorage1'"
		},
		"AzureTableStorage_VBFA_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureTableStorage_VBFA'"
		},
		"CosmosDb1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDb1'"
		},
		"ECS_GCP_S3_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'ECS_GCP_S3'"
		},
		"RestService2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService2'"
		},
		"USB4SAP_1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'USB4SAP_1'"
		},
		"ADLS_Gen2_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'ADLS_Gen2'"
		},
		"ADLS_Parquet_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'ADLS_Parquet'"
		},
		"AzureDataLakeStore1_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://ecsadls001.azuredatalakestore.net/webhdfs/v1"
		},
		"AzureDataLakeStore1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "403d0a69-ae6c-459e-a989-d89a3141d440"
		},
		"AzureDataLakeStore1_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "0255b63f-c086-4357-894d-bce6b2b98d6f"
		},
		"AzureDataLakeStore1_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "my-resource-001"
		},
		"AzureDataLakeStore2_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://ecsadls001.azuredatalakestore.net/webhdfs/v1"
		},
		"AzureDataLakeStore2_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "403d0a69-ae6c-459e-a989-d89a3141d440"
		},
		"AzureDataLakeStore2_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "0255b63f-c086-4357-894d-bce6b2b98d6f"
		},
		"AzureDataLakeStore2_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "my-resource-001"
		},
		"AzureDataLake_Gen2001_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakegen2001.dfs.core.windows.net"
		},
		"ECS_GCP_S3_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "GOOG1E4YFBZNH3I7OK5NQM6VHASINBEDQD2NYT3XVDB6XA6JFKA3AYOR2L5PA"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sap-erp-data.s3.amazonaws.com"
		},
		"RestService2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://35.208.99.120:8000/sap/opu/odata/ECOS/OBJ2CLOUD_V2_SRV/ET_DatasetSet?$filter=ObjectName eq 'WS_MONITOR_OUTB_DEL_GDSI' and ObjectType eq 'R' and Delimiter eq '|' and ImportGeneric eq 'ALVV1' and DataDest eq '0:0' &$format=json"
		},
		"RestService2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "service1"
		},
		"USB4SAP_1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://sap-ecc-ehp8.ecoservity.com:8000/sap/opu/odata/ECOS/OBJ2CLOUD_V2_2_SRV/ET_DataSetSet?$filter=ObjectName eq 'RM07DOCS' and ObjectType eq 'R' and Delimiter eq '|' and ImportGeneric eq 'TYPE:ALV|VARIANT:USB4SAP1|FIELD_LABLE:B|' and DataDest eq '0|0||' &$format=xlsx"
		},
		"USB4SAP_1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "service1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Pipe2SAP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "REST_API2SAP",
						"type": "WebActivity",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"disableCertValidation": true,
							"url": "http://sap-ecc-ehp8.ecoservity.com:8000/sap/opu/odata/ECOS/OBJ2CLOUD_V2_2_SRV/ET_DataSetSet?$filter=ObjectName%20eq%20%27RM07DOCS%27%20and%20ObjectType%20eq%20%27R%27%20and%20Delimiter%20eq%20%27|%27%20and%20ImportGeneric%20eq%20%27TYPE:ALV|VARIANT:USB4SAP1||FIELD_LABLE:B%27%20and%20DataDest%20eq%20%270|0||27%20$format=json",
							"authentication": {
								"type": "Basic",
								"username": "service1",
								"password": {
									"type": "SecureString",
									"value": "**********"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-09-28T04:05:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Send notification to a channel in Microsoft Teams1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Use this pipeline template to send notification on a teams channel. \n\nhttps://adf.azure.com/en-us/monitoring/pipelineruns/f90465ff-b8ea-4f0f-9110-178164bc8ee4?factory=/subscriptions/7b68d2b5-dfbe-46e1-938f-98ed143b7953/resourceGroups/demo101-rg/providers/Microsoft.DataFactory/factories/demofactory101",
				"activities": [
					{
						"name": "Set Facts",
						"description": "Details on Fact schema for teams messages: https://adaptivecards.io/explorer/Fact.html",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "messageCardString",
							"value": {
								"value": "{\n    \"@type\": \"MessageCard\",\n    \"@context\": \"http://schema.org/extensions\",\n    \"themeColor\": \"0076D7\",\n    \"summary\": \"Pipeline status alert message​​​​\",\n    \"sections\": [\n        {\n            \"activityTitle\": \"Pipeline alert​​​​\",\n            \"facts\": [\n                {\n                    \"name\": \"Pipeline RunId:\",\n                    \"value\": \"@{pipeline().parameters.pipelineRunId}\"\n                },\n                {\n                    \"name\": \"Activity name:\",\n                    \"value\": \"@{pipeline().parameters.activityName}\"\n                },\n                {\n                    \"name\": \"Activity status:\",\n                    \"value\": \"@{pipeline().parameters.activityStatus}\"\n                },\n                {\n                    \"name\": \"Execution duration (s):\",\n                    \"value\": \"@{pipeline().parameters.activityDuration}\"\n                },\n                {\n                    \"name\": \"Message\",\n                    \"value\": \"@{pipeline().parameters.activityMessage}\"\n                },\n                {\n                    \"name\": \"Notification time (UTC):\",\n                    \"value\": \"@{utcNow()}\"\n                },\n                {\n                    \"name\": \"Data Factory name:\",\n                    \"value\": \"@{pipeline().DataFactory}\"\n                }\n            ],\n            \"markdown\": true\n        }\n    ],\n    \"potentialAction\": [\n        {\n            \"@type\": \"OpenUri\",\n            \"name\": \"View pipeline run\",\n            \"targets\": [\n                {\n                    \"os\": \"default\",\n                    \"uri\": \"@{concat('https://adf.azure.com/monitoring/pipelineruns/',pipeline().parameters.pipelineRunId,'?factory=/subscriptions/',pipeline().parameters.dataFactorySubscription,'/resourceGroups/',pipeline().parameters.dataFactoryResourceGroup,'/providers/Microsoft.DataFactory/factories/',pipeline().DataFactory)}\"\n                }\n            ]\n        }\n    ]\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Call Teams Webhook",
						"description": "Invokes teams channel's webbook.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Facts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": {
								"value": "@pipeline().parameters.teamsWebhookUrl",
								"type": "Expression"
							},
							"body": {
								"value": "@json(variables('messageCardString'))",
								"type": "Expression"
							},
							"authentication": {
								"type": "Basic",
								"username": "aj@ecoservity.com",
								"password": {
									"type": "SecureString",
									"value": "**********"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dataFactorySubscription": {
						"type": "string",
						"defaultValue": "46dc1f4c-23e9-44fc-9f55-1ed1a221be89"
					},
					"dataFactoryResourceGroup": {
						"type": "string",
						"defaultValue": "NetworkWatcherRG"
					},
					"pipelineRunId": {
						"type": "string",
						"defaultValue": "Overwrite the value from the calling activity "
					},
					"teamsWebhookUrl": {
						"type": "string",
						"defaultValue": "https://teams.microsoft.com/l/team/19%3azEkQeVOvSvUzSNUGJJW8RTHxNB84wlekE4kwnriE0pg1%40thread.tacv2/conversations?groupId=c03c2faf-6374-4628-aa1d-f538ef0ba360&tenantId=403d0a69-ae6c-459e-a989-d89a3141d440"
					},
					"activityName": {
						"type": "string",
						"defaultValue": "Overwrite the value from the calling activity "
					},
					"activityMessage": {
						"type": "string",
						"defaultValue": "Overwrite the value from the calling activity "
					},
					"activityDuration": {
						"type": "string",
						"defaultValue": "Overwrite the value from the calling activity "
					},
					"activityStatus": {
						"type": "string",
						"defaultValue": "Failed"
					}
				},
				"variables": {
					"messageCardString": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-06-21T05:15:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Gen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"sasUri": "[parameters('ADLS_Gen2_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Parquet')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"sasUri": "[parameters('ADLS_Parquet_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_VBFA')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_VBFA_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStore1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('AzureDataLakeStore1_properties_typeProperties_dataLakeStoreUri')]",
					"tenant": "[parameters('AzureDataLakeStore1_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('AzureDataLakeStore1_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureDataLakeStore1_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStore2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('AzureDataLakeStore2_properties_typeProperties_dataLakeStoreUri')]",
					"tenant": "[parameters('AzureDataLakeStore2_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('AzureDataLakeStore2_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureDataLakeStore2_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLake_Gen2001')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLake_Gen2001_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLake_Gen2001_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "PG",
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTableStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureTableStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTableStorage_VBFA')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureTableStorage_VBFA_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDb1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDb1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ECS_GCP_S3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "GoogleCloudStorage",
				"typeProperties": {
					"serviceUrl": "https://storage.googleapis.com",
					"accessKeyId": "[parameters('ECS_GCP_S3_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('ECS_GCP_S3_secretAccessKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService2_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService2_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/USB4SAP_1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('USB4SAP_1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('USB4SAP_1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('USB4SAP_1_password')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}